#Log level
# defines the border of the levels that get logged
# errors with a lower level than here defined are not logged
# Default:
# 0 = all errors are logged
# 1 = low, medium, hard errors are logged
# 2 = medium and hard errors are logged
# 3 = only hard errors are logged
# -1 = no errors are logged
custom.log.level=0

# Logmessage components set together:
# (if time: [TIMEPATTERN][TIMESEPERATOR])
# [BEGIN][SEPERATOR][ACTUAL_MESSAGE][SEPERATOR][END]
# (if exception: [ERROR][PREERROR][ACTUAL_ERROR][STACK][PRESTACK][ACTUALSTACK])

# Should the actual time be logged (true/false)
custom.log.time=true
# Pattern of the logged time
custom.log.msg.timepattern=yyyy-MM-dd HH:mm:ss
# Seperator between time and message
custom.log.msg.timeseperator=\u0020-\u0020

# Message BEGIN
custom.log.msg.begin=[COMPANYNAME]
# Message END
custom.log.msg.end=[END]
# Message seperator
custom.log.msg.seperator=\u0020

# Should the exception be logged (true/false)
custom.log.exception=true
# Errorheading
custom.log.msg.error=\nERROR:\n
# Sequnce before the actual error
custom.log.msg.preerror=\u0020\u0020
# Stackheading
custom.log.msg.stack=\nSTACK:\n
# Sequence before the actual stack
custom.log.msg.prestack=\u0020\u0020

# Minimum number of lines to log from the Stacktrace
custom.log.msg.stack.lines.min=5
# Maximum number of lines to log from the Stacktrace
custom.log.msg.stack.lines.max=10

# Sequence before the additional sequence
custom.log.msg.preadd=\nADDITIONAL:\n

# New line character
custom.log.newlinechar="\n"